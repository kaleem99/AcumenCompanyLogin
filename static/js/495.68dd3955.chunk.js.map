{"version":3,"file":"static/js/495.68dd3955.chunk.js","mappings":"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","sources":["../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/auth/auth.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/endpoint.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/extensions/checksum.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/http.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/middleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/profile.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/types/dist-es/transfer.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/protocol-http/dist-es/httpRequest.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/protocol-http/dist-es/httpResponse.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/aws.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-config-provider/dist-es/types.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-middleware/dist-es/getSmithyContext.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-content-length/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/url-parser/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/querystring-parser/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromConfig.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/config.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/service-error-classification/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/service-error-classification/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/uuid/dist/esm-browser/native.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/util.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/client.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-base64/dist-es/constants.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-base64/dist-es/fromBase64.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-base64/dist-es/toBase64.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/querystring-builder/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-hex-encoding/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/command.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/parse-utils.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/exceptions.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/default-error-handler.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/defaults-mode.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/extensions/retry.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/lazy-json.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/object-mapping.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/serde-json.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/isStreamingPayload/isStreamingPayload.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthSchemeProvider.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-body-length-browser/dist-es/calculateBodyLength.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/endpointResolver.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/property-provider/dist-es/ProviderError.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/property-provider/dist-es/chain.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-defaults-mode-browser/dist-es/constants.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.browser.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/property-provider/dist-es/memoize.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.shared.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/invalid-dependency/dist-es/invalidProvider.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/auth/httpAuthExtensionConfiguration.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/CognitoIdentityClient.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/middleware-retry/dist-es/configurations.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeExtensions.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/models/CognitoIdentityServiceException.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/models/models_0.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/protocols/Aws_json1_1.js","../node_modules/@aws-sdk/client-cognito-identity/node_modules/@smithy/smithy-client/dist-es/date-utils.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetCredentialsForIdentityCommand.js","../node_modules/@aws-sdk/client-cognito-identity/dist-es/commands/GetIdCommand.js"],"sourcesContent":["export const getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\n    let httpHandler = runtimeConfig.httpHandler;\n    return {\n        setHttpHandler(handler) {\n            httpHandler = handler;\n        },\n        httpHandler() {\n            return httpHandler;\n        },\n        updateHttpClientConfig(key, value) {\n            httpHandler.updateHttpClientConfig(key, value);\n        },\n        httpHandlerConfigs() {\n            return httpHandler.httpHandlerConfigs();\n        },\n    };\n};\nexport const resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\n    return {\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\n    };\n};\n","export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n","export var HttpApiKeyAuthLocation;\n(function (HttpApiKeyAuthLocation) {\n    HttpApiKeyAuthLocation[\"HEADER\"] = \"header\";\n    HttpApiKeyAuthLocation[\"QUERY\"] = \"query\";\n})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","export var AlgorithmId;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(AlgorithmId || (AlgorithmId = {}));\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n","export const SMITHY_CONTEXT_KEY = \"__smithy_context\";\n","export var IniSectionType;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(IniSectionType || (IniSectionType = {}));\n","export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","import { HttpRequest } from \"@smithy/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","import { isValidHostLabel } from \"@smithy/util-endpoints\";\nimport { isIpAddress } from \"../isIpAddress\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n","import { customEndpointFunctions } from \"@smithy/util-endpoints\";\nimport { isVirtualHostableS3Bucket } from \"./lib/aws/isVirtualHostableS3Bucket\";\nimport { parseArn } from \"./lib/aws/parseArn\";\nimport { partition } from \"./lib/aws/partition\";\nexport const awsEndpointFunctions = {\n    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,\n    parseArn: parseArn,\n    partition: partition,\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","export const parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_NAME_SEPARATOR = \"/\";\nexport const UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexport const UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexport const UA_ESCAPE_CHAR = \"-\";\n","import { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { SPACE, UA_ESCAPE_CHAR, UA_NAME_ESCAPE_REGEX, UA_NAME_SEPARATOR, UA_VALUE_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT, } from \"./constants\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport const getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { HttpRequest } from \"@smithy/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = Boolean(isArn && partition && service && bucket);\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return isValidArn;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\n            return configValue;\n        };\n    }\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseUrl } from \"@smithy/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nimport { getEndpointFromConfig } from \"./getEndpointFromConfig\";\nimport { toEndpointV1 } from \"./toEndpointV1\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    if (!clientConfig.endpoint) {\n        const endpointFromConfig = await getEndpointFromConfig(clientConfig.serviceId || \"\");\n        if (endpointFromConfig) {\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n        }\n    }\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","import { getSmithyContext } from \"@smithy/util-middleware\";\nimport { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n            const smithyContext = getSmithyContext(context);\n            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;\n            if (httpAuthOption) {\n                httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {\n                    signing_region: authScheme.signingRegion,\n                    signingRegion: authScheme.signingRegion,\n                    signing_service: authScheme.signingName,\n                    signingName: authScheme.signingName,\n                    signingRegionSet: authScheme.signingRegionSet,\n                }, authScheme.properties);\n            }\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","export const getEndpointFromConfig = async (serviceId) => undefined;\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","export const deserializerMiddleware = (options, deserializer) => (next) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            error.message += \"\\n  \" + hint;\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n        }\n        throw error;\n    }\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isClockSkewCorrectedError = (error) => error.$metadata?.clockSkewCorrected;\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => isClockSkewCorrectedError(error) ||\n    TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@smithy/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nimport { createDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.capacity = INITIAL_RETRY_TOKENS;\n        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return createDefaultRetryToken({\n            retryDelay: DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return createDefaultRetryToken({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","const getAllAliases = (name, aliases) => {\n    const _aliases = [];\n    if (name) {\n        _aliases.push(name);\n    }\n    if (aliases) {\n        for (const alias of aliases) {\n            _aliases.push(alias);\n        }\n    }\n    return _aliases;\n};\nconst getMiddlewareNameWithAliases = (name, aliases) => {\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n};\nexport const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    let identifyOnResolve = false;\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            const aliases = getAllAliases(entry.name, entry.aliases);\n            if (aliases.includes(toRemove)) {\n                isRemoved = true;\n                for (const alias of aliases) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = absoluteEntries[toOverrideIndex];\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\n                                `${entry.priority} priority in ${entry.step} step.`);\n                        }\n                        absoluteEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = relativeEntries[toOverrideIndex];\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\n                                `\"${entry.toMiddleware}\" middleware.`);\n                        }\n                        relativeEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name, aliases: _aliases } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    const aliases = getAllAliases(name, _aliases);\n                    for (const alias of aliases) {\n                        entriesNameSet.delete(alias);\n                    }\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                const step = mw.step ??\n                    mw.relation +\n                        \" \" +\n                        mw.toMiddleware;\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n            });\n        },\n        identifyOnResolve(toggle) {\n            if (typeof toggle === \"boolean\")\n                identifyOnResolve = toggle;\n            return identifyOnResolve;\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            if (identifyOnResolve) {\n                console.log(stack.identify());\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@smithy/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.middlewareStack = constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\n","const alphabetByEncoding = {};\nconst alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    alphabetByEncoding[char] = i;\n    alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    const index = i + 26;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n    alphabetByEncoding[i.toString(10)] = i + 52;\n    const char = i.toString(10);\n    const index = i + 52;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\nexport { alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue };\n","import { alphabetByEncoding, bitsPerByte, bitsPerLetter } from \"./constants.browser\";\nexport const fromBase64 = (input) => {\n    let totalByteLength = (input.length / 4) * 3;\n    if (input.slice(-2) === \"==\") {\n        totalByteLength -= 2;\n    }\n    else if (input.slice(-1) === \"=\") {\n        totalByteLength--;\n    }\n    const out = new ArrayBuffer(totalByteLength);\n    const dataView = new DataView(out);\n    for (let i = 0; i < input.length; i += 4) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = i + 3; j <= limit; j++) {\n            if (input[j] !== \"=\") {\n                if (!(input[j] in alphabetByEncoding)) {\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n                }\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n                bitLength += bitsPerLetter;\n            }\n            else {\n                bits >>= bitsPerLetter;\n            }\n        }\n        const chunkOffset = (i / 4) * 3;\n        bits >>= bitLength % bitsPerByte;\n        const byteLength = Math.floor(bitLength / bitsPerByte);\n        for (let k = 0; k < byteLength; k++) {\n            const offset = (byteLength - k - 1) * bitsPerByte;\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n        }\n    }\n    return new Uint8Array(out);\n};\n","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { fromUtf8 } from \"@smithy/util-utf8\";\nimport { alphabetByValue, bitsPerByte, bitsPerLetter, maxLetterValue } from \"./constants.browser\";\nexport function toBase64(_input) {\n    let input;\n    if (typeof _input === \"string\") {\n        input = fromUtf8(_input);\n    }\n    else {\n        input = _input;\n    }\n    const isArrayLike = typeof input === \"object\" && typeof input.length === \"number\";\n    const isUint8Array = typeof input === \"object\" &&\n        typeof input.byteOffset === \"number\" &&\n        typeof input.byteLength === \"number\";\n    if (!isArrayLike && !isUint8Array) {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    let str = \"\";\n    for (let i = 0; i < input.length; i += 3) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n            bitLength += bitsPerByte;\n        }\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\n        for (let k = 1; k <= bitClusterCount; k++) {\n            const offset = (bitClusterCount - k) * bitsPerLetter;\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n        }\n        str += \"==\".slice(0, 4 - bitClusterCount);\n    }\n    return str;\n}\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","export function requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { buildQueryString } from \"@smithy/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nexport const keepAliveSupport = {\n    supported: Boolean(typeof Request !== \"undefined\" && \"keepalive\" in new Request(\"https://[::1]\")),\n};\nexport class FetchHttpHandler {\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new FetchHttpHandler(instanceOrOptions);\n    }\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        const keepAlive = this.config.keepAlive === true;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        const queryString = buildQueryString(request.query || {});\n        if (queryString) {\n            path += `?${queryString}`;\n        }\n        if (request.fragment) {\n            path += `#${request.fragment}`;\n        }\n        let auth = \"\";\n        if (request.username != null || request.password != null) {\n            const username = request.username ?? \"\";\n            const password = request.password ?? \"\";\n            auth = `${username}:${password}@`;\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n        };\n        if (body) {\n            requestOptions.duplex = \"half\";\n        }\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions.signal = abortSignal;\n        }\n        if (keepAliveSupport.supported) {\n            requestOptions.keepalive = keepAlive;\n        }\n        const fetchRequest = new Request(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            reason: response.statusText,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        reason: response.statusText,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                abortSignal.onabort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }));\n        }\n        return Promise.race(raceOfPromises);\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            config[key] = value;\n            return config;\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","import { fromBase64 } from \"@smithy/util-base64\";\nexport const streamCollector = (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","import { constructStack } from \"@smithy/middleware-stack\";\nimport { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n    static classBuilder() {\n        return new ClassBuilder();\n    }\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n            this.middlewareStack.use(mw);\n        }\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog,\n            outputFilterSensitiveLog,\n            [SMITHY_CONTEXT_KEY]: {\n                ...smithyContext,\n            },\n            ...additionalContext,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n}\nclass ClassBuilder {\n    constructor() {\n        this._init = () => { };\n        this._ep = {};\n        this._middlewareFn = () => [];\n        this._commandName = \"\";\n        this._clientName = \"\";\n        this._additionalContext = {};\n        this._smithyContext = {};\n        this._inputFilterSensitiveLog = (_) => _;\n        this._outputFilterSensitiveLog = (_) => _;\n        this._serializer = null;\n        this._deserializer = null;\n    }\n    init(cb) {\n        this._init = cb;\n    }\n    ep(endpointParameterInstructions) {\n        this._ep = endpointParameterInstructions;\n        return this;\n    }\n    m(middlewareSupplier) {\n        this._middlewareFn = middlewareSupplier;\n        return this;\n    }\n    s(service, operation, smithyContext = {}) {\n        this._smithyContext = {\n            service,\n            operation,\n            ...smithyContext,\n        };\n        return this;\n    }\n    c(additionalContext = {}) {\n        this._additionalContext = additionalContext;\n        return this;\n    }\n    n(clientName, commandName) {\n        this._clientName = clientName;\n        this._commandName = commandName;\n        return this;\n    }\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\n        this._inputFilterSensitiveLog = inputFilter;\n        this._outputFilterSensitiveLog = outputFilter;\n        return this;\n    }\n    ser(serializer) {\n        this._serializer = serializer;\n        return this;\n    }\n    de(deserializer) {\n        this._deserializer = deserializer;\n        return this;\n    }\n    build() {\n        const closure = this;\n        let CommandRef;\n        return (CommandRef = class extends Command {\n            static getEndpointParameterInstructions() {\n                return closure._ep;\n            }\n            constructor(...[input]) {\n                super();\n                this.serialize = closure._serializer;\n                this.deserialize = closure._deserializer;\n                this.input = input ?? {};\n                closure._init(this);\n            }\n            resolveMiddleware(stack, configuration, options) {\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\n                    CommandCtor: CommandRef,\n                    middlewareFn: closure._middlewareFn,\n                    clientName: closure._clientName,\n                    commandName: closure._commandName,\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog,\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog,\n                    smithyContext: closure._smithyContext,\n                    additionalContext: closure._additionalContext,\n                });\n            }\n        });\n    }\n}\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","import { AlgorithmId } from \"@smithy/types\";\nexport { AlgorithmId };\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    for (const id in AlgorithmId) {\n        const algorithmId = AlgorithmId[id];\n        if (runtimeConfig[algorithmId] === undefined) {\n            continue;\n        }\n        checksumAlgorithms.push({\n            algorithmId: () => algorithmId,\n            checksumConstructor: () => runtimeConfig[algorithmId],\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export const getRetryConfiguration = (runtimeConfig) => {\n    let _retryStrategy = runtimeConfig.retryStrategy;\n    return {\n        setRetryStrategy(retryStrategy) {\n            _retryStrategy = retryStrategy;\n        },\n        retryStrategy() {\n            return _retryStrategy;\n        },\n    };\n};\nexport const resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\n    const runtimeConfig = {};\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n    return runtimeConfig;\n};\n","import { getChecksumConfiguration, resolveChecksumRuntimeConfig } from \"./checksum\";\nimport { getRetryConfiguration, resolveRetryRuntimeConfig } from \"./retry\";\nexport const getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return {\n        ...getChecksumConfiguration(runtimeConfig),\n        ...getRetryConfiguration(runtimeConfig),\n    };\n};\nexport const getDefaultClientConfiguration = getDefaultExtensionConfiguration;\nexport const resolveDefaultRuntimeConfig = (config) => {\n    return {\n        ...resolveChecksumRuntimeConfig(config),\n        ...resolveRetryRuntimeConfig(config),\n    };\n};\n","export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","export const _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null).map(_json);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n","export const isStreamingPayload = (request) => request?.body instanceof ReadableStream;\n","import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@smithy/service-error-classification\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@smithy/util-retry\";\nimport { v4 } from \"uuid\";\nimport { isStreamingPayload } from \"./isStreamingPayload/isStreamingPayload\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        const isRequest = HttpRequest.isInstance(request);\n        if (isRequest) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (isRequest) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                if (isRequest && isStreamingPayload(request)) {\n                    (context.logger instanceof NoOpLogger ? console : context.logger)?.warn(\"An error was encountered in a non-retryable streaming request.\");\n                    throw lastError;\n                }\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        error,\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultCognitoIdentityHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"cognito-identity\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultCognitoIdentityHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetCredentialsForIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"GetId\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"GetOpenIdToken\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"UnlinkIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return {\n        ...config_0,\n    };\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"cognito-identity\",\n    };\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import bowser from \"bowser\";\nexport const defaultUserAgent = ({ serviceId, clientVersion }) => async () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [\"ua\", \"2.0\"],\n        [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n        [\"lang/js\"],\n        [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n    ];\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    return sections;\n};\n","const TEXT_ENCODER = typeof TextEncoder == \"function\" ? new TextEncoder() : null;\nexport const calculateBodyLength = (body) => {\n    if (typeof body === \"string\") {\n        if (TEXT_ENCODER) {\n            return TEXT_ENCODER.encode(body).byteLength;\n        }\n        let len = body.length;\n        for (let i = len - 1; i >= 0; i--) {\n            const code = body.charCodeAt(i);\n            if (code > 0x7f && code <= 0x7ff)\n                len++;\n            else if (code > 0x7ff && code <= 0xffff)\n                len += 2;\n            if (code >= 0xdc00 && code <= 0xdfff)\n                i--;\n        }\n        return len;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","export const toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return new TextDecoder(\"utf-8\").decode(input);\n};\n","const s = \"required\", t = \"fn\", u = \"argv\", v = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = { [s]: false, \"type\": \"String\" }, i = { [s]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [v]: \"Endpoint\" }, k = { [t]: c, [u]: [{ [v]: \"UseFIPS\" }, true] }, l = { [t]: c, [u]: [{ [v]: \"UseDualStack\" }, true] }, m = {}, n = { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsFIPS\"] }, o = { [t]: c, [u]: [true, { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsDualStack\"] }] }, p = [k], q = [l], r = [{ [v]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [t]: b, [u]: [j] }], rules: [{ conditions: p, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: q, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: j, properties: m, headers: m }, type: e }], type: f }, { conditions: [{ [t]: b, [u]: r }], rules: [{ conditions: [{ [t]: \"aws.partition\", [u]: r, assign: g }], rules: [{ conditions: [k, l], rules: [{ conditions: [{ [t]: c, [u]: [a, n] }, o], rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: p, rules: [{ conditions: [{ [t]: c, [u]: [n, a] }], rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: q, rules: [{ conditions: [o], rules: [{ endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","export class ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"ProviderError\";\n        Object.setPrototypeOf(this, ProviderError.prototype);\n    }\n    static from(error, tryNextLink = true) {\n        return Object.assign(new this(error.message, tryNextLink), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n","export const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\n","import { memoize } from \"@smithy/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n","import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultCognitoIdentityHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2014-06-30\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultCognitoIdentityHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Cognito Identity\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","export const invalidProvider = (message) => () => Promise.reject(message);\n","import { booleanSelector, SelectorType } from \"@smithy/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultCognitoIdentityHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class CognitoIdentityClient extends __Client {\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n            identityProviderConfigProvider: this.getIdentityProviderConfigProvider(),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n    getDefaultHttpAuthSchemeParametersProvider() {\n        return defaultCognitoIdentityHttpAuthSchemeParametersProvider;\n    }\n    getIdentityProviderConfigProvider() {\n        return async (config) => new DefaultIdentityProviderConfig({\n            \"aws.auth#sigv4\": config.credentials,\n        });\n    }\n}\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n};\n","import { normalizeProvider } from \"@smithy/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@smithy/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","export function resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class CognitoIdentityServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, CognitoIdentityServiceException.prototype);\n    }\n}\n","import { CognitoIdentityServiceException as __BaseException } from \"./CognitoIdentityServiceException\";\nexport const AmbiguousRoleResolutionType = {\n    AUTHENTICATED_ROLE: \"AuthenticatedRole\",\n    DENY: \"Deny\",\n};\nexport class InternalErrorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalErrorException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalErrorException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalErrorException.prototype);\n    }\n}\nexport class InvalidParameterException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidParameterException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidParameterException.prototype);\n    }\n}\nexport class LimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nexport class NotAuthorizedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"NotAuthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NotAuthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NotAuthorizedException.prototype);\n    }\n}\nexport class ResourceConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceConflictException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport const ErrorCode = {\n    ACCESS_DENIED: \"AccessDenied\",\n    INTERNAL_SERVER_ERROR: \"InternalServerError\",\n};\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class ExternalServiceException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExternalServiceException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExternalServiceException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExternalServiceException.prototype);\n    }\n}\nexport class InvalidIdentityPoolConfigurationException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityPoolConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityPoolConfigurationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityPoolConfigurationException.prototype);\n    }\n}\nexport const MappingRuleMatchType = {\n    CONTAINS: \"Contains\",\n    EQUALS: \"Equals\",\n    NOT_EQUAL: \"NotEqual\",\n    STARTS_WITH: \"StartsWith\",\n};\nexport const RoleMappingType = {\n    RULES: \"Rules\",\n    TOKEN: \"Token\",\n};\nexport class DeveloperUserAlreadyRegisteredException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DeveloperUserAlreadyRegisteredException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DeveloperUserAlreadyRegisteredException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DeveloperUserAlreadyRegisteredException.prototype);\n    }\n}\nexport class ConcurrentModificationException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConcurrentModificationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConcurrentModificationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);\n    }\n}\n","import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException, } from \"../models/models_0\";\nexport const se_CreateIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCredentialsForIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetCredentialsForIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetIdCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetId\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetIdentityPoolRoles\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpenIdTokenCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpenIdToken\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetOpenIdTokenForDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetPrincipalTagAttributeMap\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListIdentityPoolsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListIdentityPools\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTagsForResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTagsForResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_LookupDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"LookupDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_MergeDeveloperIdentitiesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"MergeDeveloperIdentities\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SetIdentityPoolRoles\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_SetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = sharedHeaders(\"SetPrincipalTagAttributeMap\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UnlinkDeveloperIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UnlinkDeveloperIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UnlinkIdentityCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UnlinkIdentity\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UntagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateIdentityPoolCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateIdentityPool\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_CreateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DeleteIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DeleteIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_DescribeIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_IdentityDescription(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DescribeIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetCredentialsForIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCredentialsForIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetIdCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetOpenIdTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListIdentityPoolsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_LookupDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_MergeDeveloperIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_SetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_SetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_UnlinkDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_UnlinkIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nexport const de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_UpdateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await de_InternalErrorExceptionRes(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await de_InvalidParameterExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await de_NotAuthorizedExceptionRes(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await de_ResourceConflictExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await de_ExternalServiceExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityPoolConfigurationException\":\n        case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n            throw await de_InvalidIdentityPoolConfigurationExceptionRes(parsedOutput, context);\n        case \"DeveloperUserAlreadyRegisteredException\":\n        case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n            throw await de_DeveloperUserAlreadyRegisteredExceptionRes(parsedOutput, context);\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n            throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ConcurrentModificationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ConcurrentModificationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DeveloperUserAlreadyRegisteredExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DeveloperUserAlreadyRegisteredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ExternalServiceExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ExternalServiceException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InternalErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InternalErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityPoolConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidIdentityPoolConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_NotAuthorizedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new NotAuthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_Credentials = (output, context) => {\n    return take(output, {\n        AccessKeyId: __expectString,\n        Expiration: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        SecretKey: __expectString,\n        SessionToken: __expectString,\n    });\n};\nconst de_GetCredentialsForIdentityResponse = (output, context) => {\n    return take(output, {\n        Credentials: (_) => de_Credentials(_, context),\n        IdentityId: __expectString,\n    });\n};\nconst de_IdentitiesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_IdentityDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_IdentityDescription = (output, context) => {\n    return take(output, {\n        CreationDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        IdentityId: __expectString,\n        LastModifiedDate: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        Logins: _json,\n    });\n};\nconst de_ListIdentitiesResponse = (output, context) => {\n    return take(output, {\n        Identities: (_) => de_IdentitiesList(_, context),\n        IdentityPoolId: __expectString,\n        NextToken: __expectString,\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `AWSCognitoIdentityService.${operation}`,\n    };\n}\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_GetCredentialsForIdentityCommand, se_GetCredentialsForIdentityCommand } from \"../protocols/Aws_json1_1\";\nexport { $Command };\nexport class GetCredentialsForIdentityCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSCognitoIdentityService\", \"GetCredentialsForIdentity\", {})\n    .n(\"CognitoIdentityClient\", \"GetCredentialsForIdentityCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetCredentialsForIdentityCommand)\n    .de(de_GetCredentialsForIdentityCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_GetIdCommand, se_GetIdCommand } from \"../protocols/Aws_json1_1\";\nexport { $Command };\nexport class GetIdCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSCognitoIdentityService\", \"GetId\", {})\n    .n(\"CognitoIdentityClient\", \"GetIdCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetIdCommand)\n    .de(de_GetIdCommand)\n    .build() {\n}\n"],"names":["getHttpHandlerExtensionConfiguration","runtimeConfig","httpHandler","setHttpHandler","handler","updateHttpClientConfig","key","value","httpHandlerConfigs","HttpAuthLocation","HttpApiKeyAuthLocation","EndpointURLScheme","AlgorithmId","FieldPosition","SMITHY_CONTEXT_KEY","IniSectionType","RequestHandlerProtocol","HttpRequest","constructor","options","this","method","hostname","port","query","headers","body","protocol","slice","concat","path","charAt","username","password","fragment","isInstance","request","req","clone","cloned","Object","keys","reduce","carry","paramName","param","Array","isArray","HttpResponse","statusCode","reason","response","resp","hostHeaderMiddlewareOptions","name","step","priority","tags","override","getHostHeaderPlugin","applyToStack","clientStack","add","next","async","args","handlerProtocol","requestHandler","metadata","indexOf","host","hostHeaderMiddleware","loggerMiddlewareOptions","TRACE_ID_HEADER_NAME","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","runtime","hasOwnProperty","traceId","process","nonEmptyString","str","length","recursionDetectionMiddleware","isVirtualHostableS3Bucket","arguments","undefined","label","split","isValidHostLabel","toLowerCase","isIpAddress","selectedPartitionsInfo","selectedUserAgentPrefix","awsEndpointFunctions","parseArn","segments","arn","partition","service","region","accountId","resourceId","includes","partitions","regions","outputs","regionData","entries","regionRegex","RegExp","test","DEFAULT_PARTITION","find","id","Error","customEndpointFunctions","aws","USER_AGENT","X_AMZ_USER_AGENT","UA_NAME_ESCAPE_REGEX","UA_VALUE_ESCAPE_REGEX","userAgentMiddleware","context","_context$userAgent","_options$customUserAg","userAgent","map","escapeUserAgent","defaultUserAgent","defaultUserAgentProvider","customUserAgent","sdkUserAgentValue","join","normalUAValue","filter","section","startsWith","userAgentPair","_userAgentPair$","part","replace","version","prefixSeparatorIndex","prefix","substring","uaName","item","acc","index","getUserAgentMiddlewareOptions","SelectorType","getSmithyContext","normalizeProvider","input","promisified","Promise","resolve","isFipsRegion","endsWith","getRealRegion","CONTENT_LENGTH_HEADER","contentLengthMiddlewareOptions","getContentLengthPlugin","bodyLengthChecker","String","error","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","isDnsCompatibleBucketName","bucketName","isArnBucketName","bucket","isArn","isValidArn","Boolean","createConfigValueProvider","configKey","canonicalEndpointParamKey","config","configProvider","_config$configKey","configValue","_credentials$credenti","credentials","credentialScope","CredentialScope","endpoint","url","href","parseUrl","URL","pathname","search","querystring","pair","decodeURIComponent","push","parseQueryString","parseInt","toEndpointV1","resolveParams","commandInput","instructionsSupplier","clientConfig","_instructionsSupplier","endpointParams","instructions","getEndpointParameterInstructions","call","instruction","type","JSON","stringify","assign","serviceId","Bucket","encodeURIComponent","ForcePathStyle","Endpoint","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","resolveParamsForS3","endpointMiddleware","_ref","_endpoint$properties","_context$authSchemes","endpointFromConfig","getEndpointFromConfig","endpointProvider","getEndpointFromInstructions","endpointV2","authSchemes","properties","authScheme","_smithyContext$select","signingRegion","signingName","smithyContext","httpAuthOption","selectedHttpAuthScheme","signingProperties","signing_region","signing_service","signingRegionSet","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","serializer","deserializer","commandStack","deserializerMiddleware","output","defineProperty","hint","message","$responseBodyText","$response","serializerMiddleware","_context$endpointV","urlParser","endpointMiddlewareOptions","relation","toMiddleware","getEndpointPlugin","addRelativeTo","RETRY_MODES","DEFAULT_RETRY_MODE","STANDARD","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","NODEJS_TIMEOUT_ERROR_CODES","isThrottlingError","_error$$metadata2","_error$$retryable","$metadata","httpStatusCode","$retryable","throttling","isTransientError","_error$$metadata3","_error$$metadata","clockSkewCorrected","isClockSkewCorrectedError","code","DefaultRateLimiter","_options$beta","_options$minCapacity","_options$minFillRate","_options$scaleConstan","_options$smooth","currentCapacity","enabled","lastMaxRate","measuredTxRate","requestCount","lastTimestamp","timeWindow","beta","minCapacity","minFillRate","scaleConstant","smooth","currentTimeInSeconds","getCurrentTimeInSeconds","lastThrottleTime","lastTxRateBucket","Math","floor","fillRate","maxCapacity","Date","now","getSendToken","acquireTokenBucket","amount","refillTokenBucket","delay","setTimeout","timestamp","fillAmount","min","updateClientSendingRate","calculatedRate","updateMeasuredRate","rateToUse","calculateTimeWindow","cubicThrottle","enableTokenBucket","cubicSuccess","newRate","updateTokenBucketRate","getPrecise","pow","max","t","timeBucket","currentRate","num","parseFloat","toFixed","DEFAULT_RETRY_DELAY_BASE","MAXIMUM_RETRY_DELAY","INVOCATION_ID_HEADER","REQUEST_HEADER","createDefaultRetryToken","retryDelay","retryCount","retryCost","getRetryCount","getRetryDelay","getRetryCost","StandardRetryStrategy","maxAttempts","mode","capacity","retryBackoffStrategy","getDefaultRetryBackoffStrategy","delayBase","computeNextBackoffDelay","attempts","random","setDelayBase","maxAttemptsProvider","acquireInitialRetryToken","retryTokenScope","refreshRetryTokenForRetry","token","errorInfo","getMaxAttempts","shouldRetry","errorType","delayFromErrorType","retryAfterHint","getTime","capacityCost","getCapacityCost","recordSuccess","_token$getRetryCost","getCapacity","console","warn","tokenToRenew","isRetryableError","AdaptiveRetryStrategy","ADAPTIVE","rateLimiter","standardRetryStrategy","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","byteToHex","i","toString","unsafeStringify","arr","offset","buf","native","rnds","asSdkError","NoOpLogger","trace","debug","info","getAllAliases","aliases","_aliases","alias","getMiddlewareNameWithAliases","constructStack","absoluteEntries","relativeEntries","identifyOnResolve","entriesNameSet","Set","cloneTo","toStack","_toStack$identifyOnRe","forEach","entry","middleware","stack","expandRelativeMiddlewareList","from","expandedMiddlewareList","before","after","reverse","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","mainChain","sort","a","b","stepWeights","priorityWeights","wholeList","some","has","toOverrideIndex","findIndex","_entry$aliases","toOverride","splice","_entry$aliases2","use","plugin","remove","toRemove","isRemoved","filterCb","delete","removeByName","removeByReference","removeByTag","_from$identifyOnResol","_from$identifyOnResol2","identify","mw","_mw$step","toggle","log","initialize","serialize","build","finalizeRequest","deserialize","high","normal","low","Client","middlewareStack","send","command","optionsOrCb","cb","callback","resolveMiddleware","then","result","err","catch","destroy","alphabetByEncoding","alphabetByValue","start","charCodeAt","limit","char","fromCharCode","fromBase64","totalByteLength","out","ArrayBuffer","dataView","DataView","bits","bitLength","j","TypeError","chunkOffset","byteLength","k","setUint8","fromUtf8","TextEncoder","encode","toBase64","_input","isArrayLike","isUint8Array","byteOffset","bitClusterCount","ceil","escapeUri","uri","hexEncode","c","toUpperCase","requestTimeout","timeoutInMs","reject","timeoutError","keepAliveSupport","Request","FetchHttpHandler","create","instanceOrOptions","handle","opts","abortSignal","requestTimeoutInMs","keepAlive","aborted","abortError","queryString","parts","iLen","qsEntry","buildQueryString","auth","_request$username","_request$password","requestOptions","Headers","duplex","AbortController","signal","keepalive","fetchRequest","raceOfPromises","fetch","fetchHeaders","transformedHeaders","statusText","status","blob","onabort","race","_this$config","streamCollector","stream","Blob","base64","reader","FileReader","onloadend","_reader$result","readyState","commaIndex","dataOffset","onerror","readAsDataURL","readToBase64","arrayBuffer","collectBlob","chunks","getReader","isDone","done","read","collected","chunk","set","collectStream","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","Command","classBuilder","ClassBuilder","resolveMiddlewareWithContext","configuration","middlewareFn","clientName","commandName","inputFilterSensitiveLog","outputFilterSensitiveLog","additionalContext","CommandCtor","logger","handlerExecutionContext","_init","_ep","_middlewareFn","_commandName","_clientName","_additionalContext","_smithyContext","_inputFilterSensitiveLog","_","_outputFilterSensitiveLog","_serializer","_deserializer","init","ep","endpointParameterInstructions","m","middlewareSupplier","s","operation","n","f","inputFilter","outputFilter","ser","de","closure","CommandRef","_len","_ref2","_key","super","expectNumber","parsed","Number","isNaN","stackTraceWarning","expectString","strictParseDouble","parseNumber","NUMBER_REGEX","matches","match","ServiceException","setPrototypeOf","prototype","$fault","decorateServiceException","exception","additions","v","Message","deserializeMetadata","_ref3","_output$headers$xAmz","requestId","extendedRequestId","cfId","loadConfigsForDefaultMode","retryMode","connectionTimeout","getChecksumConfiguration","checksumAlgorithms","algorithmId","checksumConstructor","_checksumAlgorithms","addChecksumAlgorithm","algo","resolveChecksumRuntimeConfig","checksumAlgorithm","getRetryConfiguration","_retryStrategy","retryStrategy","setRetryStrategy","resolveRetryRuntimeConfig","retryStrategyConfiguration","getDefaultExtensionConfiguration","StringWrapper","Class","getPrototypeOf","instance","Function","apply","enumerable","writable","configurable","take","source","applyInstruction","target","targetKey","nonNullish","valueFn","pass","sourceKey","_value","defaultFilterPassed","customFilterPassed","_json","obj","isStreamingPayload","ReadableStream","isRetryStrategyV2","getRetryErrorInfo","getRetryErrorType","getRetryAfterHint","_error$$metadata4","isServerError","retryMiddlewareOptions","getRetryPlugin","retry","retryToken","lastError","totalRetryDelay","isRequest","v4","e","retryErrorInfo","refreshError","retryMiddleware","retryAfterHeaderName","retryAfter","retryAfterSeconds","defaultCognitoIdentityHttpAuthSchemeParametersProvider","defaultCognitoIdentityHttpAuthSchemeProvider","authParameters","schemeId","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","commonParams","UseFIPS","Region","UseDualStack","clientVersion","_window","_parsedUA$os","_parsedUA$os2","_parsedUA$browser$nam","_parsedUA$browser","_parsedUA$browser$ver","_parsedUA$browser2","parsedUA","window","navigator","bowser","sections","os","browser","TEXT_ENCODER","calculateBodyLength","len","size","toUtf8","TextDecoder","decode","u","d","g","h","l","o","p","q","r","ruleSet","parameters","rules","conditions","defaultEndpointResolver","resolveEndpoint","DEFAULTS_MODE_OPTIONS","isMobileBrowser","_parsedUA$platform","platform","getRuntimeConfig","_config$bodyLengthChe","_config$credentialDef","_config$defaultUserAg","_config$maxAttempts","_config$region","_config$requestHandle","_config$retryMode","_config$sha","_config$streamCollect","_config$useDualstackE","_config$useFipsEndpoi","defaultsMode","memoize","provider","isExpired","requiresRefresh","resolved","pending","hasResult","isConstant","coalesceProvider","forceRefresh","toLocaleLowerCase","resolveDefaultsModeConfig","defaultConfigProvider","clientSharedValues","_config$base64Decoder","_config$base64Encoder","_config$disableHostPr","_config$endpointProvi","_config$extensions","_config$httpAuthSchem","_config$httpAuthSchem2","_config$logger","_config$serviceId","_config$urlParser","_config$utf8Decoder","_config$utf8Encoder","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","NoAuthSigner","utf8Decoder","utf8Encoder","getSharedRuntimeConfig","credentialDefaultProvider","packageInfo","RequestHandler","sha256","Sha256","useDualstackEndpoint","useFipsEndpoint","getHttpAuthExtensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","setHttpAuthScheme","httpAuthScheme","scheme","setHttpAuthSchemeProvider","setCredentials","resolveHttpAuthRuntimeConfig","CognitoIdentityClient","__Client","_config_2","providedRegion","resolveRegionConfig","_options$useDualstack","_options$useFipsEndpo","defaultSigningName","resolveClientEndpointParameters","__getRuntimeConfig","_config_3","_input$tls","_input$useDualstackEn","_input$useFipsEndpoin","tls","customEndpointProvider","isCustomEndpoint","resolveEndpointConfig","_config_4","_input$maxAttempts","resolveRetryConfig","_config_6","_config_8","resolveRuntimeExtensions","extensionConfiguration","getAwsRegionExtensionConfiguration","extension","configure","resolveAwsRegionExtensionConfiguration","httpHandlerExtensionConfiguration","resolveAwsSdkSigV4Config","_logger$info","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","outputWithoutMetadata","_logger$error","getUserAgentPlugin","getHttpAuthSchemeEndpointRuleSetPlugin","httpAuthSchemeParametersProvider","getDefaultHttpAuthSchemeParametersProvider","identityProviderConfigProvider","getIdentityProviderConfigProvider","getHttpSigningPlugin","DefaultIdentityProviderConfig","CognitoIdentityServiceException","__ServiceException","InternalErrorException","__BaseException","InvalidParameterException","LimitExceededException","NotAuthorizedException","ResourceConflictException","TooManyRequestsException","ResourceNotFoundException","ExternalServiceException","InvalidIdentityPoolConfigurationException","DeveloperUserAlreadyRegisteredException","ConcurrentModificationException","se_GetCredentialsForIdentityCommand","sharedHeaders","buildHttpRpcRequest","se_GetIdCommand","de_GetCredentialsForIdentityCommand","de_CommandError","data","parseBody","contents","de_GetCredentialsForIdentityResponse","de_GetIdCommand","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","de_InternalErrorExceptionRes","de_InvalidParameterExceptionRes","de_LimitExceededExceptionRes","de_NotAuthorizedExceptionRes","de_ResourceConflictExceptionRes","de_TooManyRequestsExceptionRes","de_ResourceNotFoundExceptionRes","de_ExternalServiceExceptionRes","de_InvalidIdentityPoolConfigurationExceptionRes","de_DeveloperUserAlreadyRegisteredExceptionRes","de_ConcurrentModificationExceptionRes","parsedBody","throwDefaultError","deserialized","__decorateServiceException","de_Credentials","AccessKeyId","__expectString","Expiration","expectNonNull","location","__expectNonNull","valueAsDouble","Infinity","round","__parseEpochTimestamp","__expectNumber","SecretKey","SessionToken","Credentials","IdentityId","ExceptionCtor","exceptionCtor","Code","resolvedHostname","basePath","__HttpRequest","GetCredentialsForIdentityCommand","$Command","cs","GetIdCommand"],"sourceRoot":""}